import React from "react";
import { Switch, Redirect } from "react-router-dom";
import IRSLimits from "../containers/Plan/IRSLimits";
import {
  AddSponsor,
  Sponsor,
  SponsorInformation,
  BasicDetails,
  AddTrustee,
  AddTrusteeMaster,
  AddCustodian,
  AddCustodianMaster,
  ManageCustodian,
  Advisor,
  ManageAdvisor,
  AddAdvisor,
  AddAdvisorMaster,
  ManageTrustee,
  Complaince,
  ManageSources,
  ManageSourcesMaster,
  ManageSourcesNew,
  Eligibility,
  AddEligibility,
  AdditionalEligibilityRule,
  SourcesAdditonalAllocationRules,
  ViewMasterSources,
  SourcesHistory,
  Vesting,
  AddVesting,
  Forfeiture,
  ManageFundings,
  ManageFundingDetails,
  Enrollment,
  Entrydate,
  Trustee,
  Custodian,
  Allocation,
  AddSourceAllocation,
  AddVestingRule,
  ManageRetirement,
  SourceEnrollment,
  Rollover,
  ManageCompensation,
  ManageSourceCompensation,
  Distributions,
  AddDistributions,
  Transfer,
  Loans,
  ManageInvestmentsPlan,
  ManageInvestmentsMaster,
  AddInvestment,
  AddLoan,
  AddInvestmentRestrictions,
  Review,
  CreatePlan,
  AdditionalAutoEnrollment,
} from "../layouts";

import ViewAssociatedPlans from "../layouts/Plans/ViewAssociatedPlans";
import ViewRestrictionHistory from "../layouts/Plans/ViewRestrictionHistory/ViewRestrictionHistory";

import { ROUTES, MANAGE_PLAN_ROUTES, ApplicationRoute } from "../utils";

export const ManagePlanRoutes = () => {
  return (
    <Switch>
      <ApplicationRoute
        exact
        path={[`${MANAGE_PLAN_ROUTES.CREATE_PLAN}`]}
        component={CreatePlan}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.BASIC_DETAILS}/:flow(add|edit|save)/:planId?`,
        ]}
        component={BasicDetails}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.BASIC_DETAILS}/:planId?`,
          `${MANAGE_PLAN_ROUTES.BASIC_DETAILS}/:flow(add|edit|save)/:planId?`,
        ]}
        component={BasicDetails}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.SPONSOR}/:planId?`,
          `${MANAGE_PLAN_ROUTES.SPONSOR}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Sponsor}
      />
      <ApplicationRoute
        exact
        path={[`${MANAGE_PLAN_ROUTES.ADD_SPONSOR}/:planId?`]}
        component={AddSponsor}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_SPONSOR}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ADD_SPONSOR}/:flow(add|edit|save)/:planId?/:sponsorId?`,
        ]}
        component={AddSponsor}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.SPONSOR_INFORMATION}/:planId?`,
          `${MANAGE_PLAN_ROUTES.SPONSOR_INFORMATION}/:flow(add|edit|save)/:planId?`,
        ]}
        component={SponsorInformation}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.TRUSTEE}/:planId?`,
          `${MANAGE_PLAN_ROUTES.TRUSTEE}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Trustee}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_TRUSTEE}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ADD_TRUSTEE}/:flow(add|edit|save)/:planId?/:trusteeId?`,
        ]}
        component={AddTrustee}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_TRUSTEE_MASTER}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ADD_TRUSTEE_MASTER}/:flow(add|edit|save)/:planId?`,
        ]}
        component={AddTrusteeMaster}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_TRUSTEE}/:planId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_TRUSTEE}/:flow(add|edit|save)/:planId?`,
        ]}
        component={ManageTrustee}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.CUSTODIAN}/:planId?`,
          `${MANAGE_PLAN_ROUTES.CUSTODIAN}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Custodian}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_CUSTODIAN}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ADD_CUSTODIAN}/:flow(add|edit|save)/:planId?/:custodianId?`,
        ]}
        component={AddCustodian}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_CUSTODIAN_MASTER}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ADD_CUSTODIAN_MASTER}/:flow(add|edit|save)/:planId?`,
        ]}
        component={AddCustodianMaster}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_CUSTODIAN}/:planId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_CUSTODIAN}/:flow(add|edit|save)/:planId?`,
        ]}
        component={ManageCustodian}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADVISOR}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ADVISOR}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Advisor}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_ADVISOR}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ADD_ADVISOR}/:flow(add|edit|save)/:planId?/:advisorId?`,
        ]}
        component={AddAdvisor}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_ADVISOR_MASTER}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ADD_ADVISOR_MASTER}/:flow(add|edit|save)/:planId?`,
        ]}
        component={AddAdvisorMaster}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_ADVISOR}/:planId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_ADVISOR}/:flow(add|edit|save)/:planId?`,
        ]}
        component={ManageAdvisor}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.COMPLAINCE}/:planId?`,
          `${MANAGE_PLAN_ROUTES.COMPLAINCE}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Complaince}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_SOURCES}/:planId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_SOURCES}/:flow(add|edit|save)/:planId?`,
        ]}
        component={ManageSources}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_SOURCES_MASTER}/:planId?/:sourceId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_SOURCES_MASTER}/:flow(add|edit|save)/:planId?/:sourceId?`,
        ]}
        component={ManageSourcesMaster}
      />
      <ApplicationRoute
        exact
        path={[`${MANAGE_PLAN_ROUTES.VIEW_SOURCES_MASTER}/:planId?/:sourceId?`]}
        component={ViewMasterSources}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_SOURCES_HISTORY}/:planId?/:sourceId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_SOURCES_HISTORY}/:flow(add|edit|save)/:planId?/:sourceId?`,
        ]}
        component={SourcesHistory}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_SOURCES_NEW}/:planId?/:sourceId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_SOURCES_NEW}/:flow(add|edit|save)/:planId?/:sourceId?`,
        ]}
        component={ManageSourcesNew}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_SOURCES_ADD_ADDITIONAL_RULES}/:planId?/:sourceId?/:ruleId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_SOURCES_ADD_ADDITIONAL_RULES}/:flow(add|edit|save)/:planId?/:sourceId?/:ruleId?`,
        ]}
        component={SourcesAdditonalAllocationRules}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ELIGIBILITY}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ELIGIBILITY}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Eligibility}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_ELIGIBILITY}/:planId?/:eligibilityIndex?`,
          `${MANAGE_PLAN_ROUTES.ADD_ELIGIBILITY}/:flow(add|edit|save)/:planId?/:eligibilityIndex?`,
        ]}
        component={AddEligibility}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADDITIONAL_ELIGIBILITY_RULE}/:planId?/:eligibilityIndex`,
          `${MANAGE_PLAN_ROUTES.ADDITIONAL_ELIGIBILITY_RULE}/:flow(add|edit|save)/:planId?/:eligibilityIndex/:additionalEligibilityId?`,
        ]}
        component={AdditionalEligibilityRule}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ALLOCATION}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ALLOCATION}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Allocation}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_SOURCE_ALLOCATION}/:planId?/:sourceAllocationId?`,
          `${MANAGE_PLAN_ROUTES.ADD_SOURCE_ALLOCATION}/:flow(add|edit|save)/:planId?/:sourceAllocationId?`,
        ]}
        component={AddSourceAllocation}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.VESTING}/:planId?`,
          `${MANAGE_PLAN_ROUTES.VESTING}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Vesting}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_VESTING}/:planId?/:vestingId?`,
          `${MANAGE_PLAN_ROUTES.ADD_VESTING}/:flow(add|edit|save)/:planId?/:vestingId?`,
        ]}
        component={AddVesting}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_VESTING_RULE}/:planId?/:vestingId/:additionalRuleId?`,
          `${MANAGE_PLAN_ROUTES.ADD_VESTING_RULE}/:flow(add|edit|save)/:planId?/:vestingId/:additionalRuleId?`,
        ]}
        component={AddVestingRule}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.FORFEITURE}/:planId?`,
          `${MANAGE_PLAN_ROUTES.FORFEITURE}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Forfeiture}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ENROLLMENT}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ENROLLMENT}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Enrollment}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADDITIONAL_AUTO_ENROLLMENT}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ADDITIONAL_AUTO_ENROLLMENT}/:flow(add|edit|save)/:planId?`,
        ]}
        component={AdditionalAutoEnrollment}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ENTRYDATE}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ENTRYDATE}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Entrydate}
      />
      <ApplicationRoute
        exact
        path={`${MANAGE_PLAN_ROUTES.SOURCE_ENROLLMENT}/:planId?/:sourceEnrollmentId?`}
        component={SourceEnrollment}
      />
      <ApplicationRoute
        exact
        path={`${MANAGE_PLAN_ROUTES.SOURCE_ENROLLMENT}/:flow(add|edit|save)/:planId?/:sourceEnrollmentId?`}
        component={SourceEnrollment}
      />
      <ApplicationRoute
        exact
        path={`${MANAGE_PLAN_ROUTES.ROLLOVER}/:planId?`}
        component={Rollover}
      />
      <ApplicationRoute
        exact
        path={`${MANAGE_PLAN_ROUTES.ROLLOVER}/:flow(add|edit|save)/:planId?/:rolloverId?`}
        component={Rollover}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.DISTRIBUTIONS}/:planId?`,
          `${MANAGE_PLAN_ROUTES.DISTRIBUTIONS}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Distributions}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_DISTRIBUTIONS}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ADD_DISTRIBUTIONS}/:flow(add|edit|save)/:planId?/:distributionIndex?`,
        ]}
        component={AddDistributions}
      />
      <ApplicationRoute
        exact
        path={`${MANAGE_PLAN_ROUTES.TRANSFER}/:planId?`}
        component={Transfer}
      />
      <ApplicationRoute
        exact
        path={`${MANAGE_PLAN_ROUTES.TRANSFER}/:flow(add|edit|save)/:planId?`}
        component={Transfer}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_FUNDING}/:planId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_FUNDING}/:flow(add|edit|save)/:planId?`,
        ]}
        component={ManageFundings}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_FUNDING_DETAIL}/:planId?/:fundId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_FUNDING_DETAIL}/:flow(add|edit|save)/:planId?/:fundId?`,
        ]}
        component={ManageFundingDetails}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_RETIREMENT}/:planId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_RETIREMENT}/:flow(add|edit|save)/:planId?`,
        ]}
        component={ManageRetirement}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_COMPENSATION}/:planId?/:companyId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_COMPENSATION}/:flow(add|edit|save)/:planId?/:companyId?`,
        ]}
        component={ManageCompensation}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_SOURCE_COMPENSATION}/:planId?/:companyId?/:sourceId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_SOURCE_COMPENSATION}/:flow(add|edit|save)/:planId?/:companyId?/:sourceId?`,
        ]}
        component={ManageSourceCompensation}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.LOANS}/:planId?`,
          `${MANAGE_PLAN_ROUTES.LOANS}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Loans}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_LOANS}/:planId?`,
          `${MANAGE_PLAN_ROUTES.ADD_LOANS}/:flow(add|edit|save)/:planId?/:loanId?`,
        ]}
        component={AddLoan}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_INVESTMENTS_MASTER}/:planId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_INVESTMENTS_MASTER}/:flow(add|edit|save)/:planId?`,
        ]}
        component={ManageInvestmentsMaster}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.MANAGE_INVESTMENTS_PLAN}/:planId?`,
          `${MANAGE_PLAN_ROUTES.MANAGE_INVESTMENTS_PLAN}/:flow(add|edit|save)/:planId?`,
        ]}
        component={ManageInvestmentsPlan}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_INVESTMENTS}/:planId?/:investmentId?`,
          `${MANAGE_PLAN_ROUTES.ADD_INVESTMENTS}/:flow(add|edit|save)/:planId?/:investmentId?`,
        ]}
        component={AddInvestment}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.ADD_INVESTMENTS_RESTRICTIONS}/:planId?/:investmentId?`,
          `${MANAGE_PLAN_ROUTES.ADD_INVESTMENTS_RESTRICTIONS}/:flow(add|edit|save)/:planId?/:investmentId?/:restrictionId?`,
        ]}
        component={AddInvestmentRestrictions}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.VIEW_INV_RESTRICTION_HISTORY}/:flow(add|edit|save)/:planId?/:investmentId?`,
        ]}
        component={ViewRestrictionHistory}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.VIEW_INV_ASSOCIATED_PLANS}/:flow(add|edit|save)/:planId?/:investmentId?`,
        ]}
        component={ViewAssociatedPlans}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.REVIEW}/:planId?`,
          `${MANAGE_PLAN_ROUTES.REVIEW}/:flow(add|edit|save)/:planId?`,
        ]}
        component={Review}
      />
      <ApplicationRoute
        exact
        path={[
          `${MANAGE_PLAN_ROUTES.IRSLIMIT}/:planId?`,
          `${MANAGE_PLAN_ROUTES.IRSLIMIT}/:flow(add|edit|save)/:planId?`,
        ]}
        component={IRSLimits}
      />

      <Redirect exact from={ROUTES.MANAGE_PLAN} to={ROUTES.CREATE_PLAN} />
    </Switch>
  );
};
