import { ROUTES } from "./";
import { default as uuid } from "uuid";

export const MANAGE_MAPPER_ROUTES = {
  MAP_AND_TRANSFORM: `${ROUTES.MANAGE_MAPPER}/map-and-transform`,
  BASIC_INFORMATION: `${ROUTES.MANAGE_MAPPER}/basic-information`,
  AGGREGATE: `${ROUTES.MANAGE_MAPPER}/aggregate`,
  SOURCE: `${ROUTES.MANAGE_MAPPER}/source`,
  FILTER: `${ROUTES.MANAGE_MAPPER}/filter`,
  TARGET: `${ROUTES.MANAGE_MAPPER}/target`,
  ASSOCIATEDPLANS: `${ROUTES.MANAGE_MAPPER}/associate-plans`,
  RULESET: `${ROUTES.MANAGE_MAPPER}/ruleset`,
  SCHEDULER: `${ROUTES.MANAGE_MAPPER}/scheduler`,
  VERIFY_MAP: `${ROUTES.MANAGE_MAPPER}/verify-map`,
  REVIEW_AND_CONFIRM: `${ROUTES.MANAGE_MAPPER}/review-and-confirm`,
  OVERVIEW: `${ROUTES.MANAGE_MAPPER}/overview`,
  FIXED_LENGTH: `${ROUTES.MANAGE_MAPPER}/fixed-length`,
};

export const MANAGE_MAPPER_MENU_WITH_OVERVIEW = [
  {
    label: "Overview",
    contentHeader: "Overview",
    path: MANAGE_MAPPER_ROUTES.OVERVIEW,
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Basic Information",
    contentHeader: "Basic Information",
    path: MANAGE_MAPPER_ROUTES.BASIC_INFORMATION,
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Source",
    path: MANAGE_MAPPER_ROUTES.SOURCE,
    contentHeader: "Source",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Filter",
    path: MANAGE_MAPPER_ROUTES.FILTER,
    contentHeader: "Filter",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Aggregate",
    path: MANAGE_MAPPER_ROUTES.AGGREGATE,
    contentHeader: "Aggregate",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Target",
    path: MANAGE_MAPPER_ROUTES.TARGET,
    contentHeader: "Target",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Map & Transform",
    path: MANAGE_MAPPER_ROUTES.MAP_AND_TRANSFORM,
    contentHeader: "Map & Transform",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Verify Map",
    path: MANAGE_MAPPER_ROUTES.VERIFY_MAP,
    contentHeader: "Verify Map",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Ruleset",
    path: MANAGE_MAPPER_ROUTES.RULESET,
    contentHeader: "Ruleset",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Scheduler",
    path: MANAGE_MAPPER_ROUTES.SCHEDULER,
    contentHeader: "Scheduler",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "File Specification",
    path: MANAGE_MAPPER_ROUTES.FIXED_LENGTH,
    contentHeader: "File Specification",
    breadCrumbs: [],
    childRoutes: [],
  },
];

export const MANAGE_MAPPER_MENU = [
  {
    label: "Basic Information",
    contentHeader: "Basic Information",
    path: MANAGE_MAPPER_ROUTES.BASIC_INFORMATION,
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Source",
    path: MANAGE_MAPPER_ROUTES.SOURCE,
    contentHeader: "Source",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Filter",
    path: MANAGE_MAPPER_ROUTES.FILTER,
    contentHeader: "Filter",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Aggregate",
    path: MANAGE_MAPPER_ROUTES.AGGREGATE,
    contentHeader: "Aggregate",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Target",
    path: MANAGE_MAPPER_ROUTES.TARGET,
    contentHeader: "Target",
    breadCrumbs: [],
    childRoutes: [],
  },
  // {
  //   label: "Associate Plans",
  //   path: MANAGE_MAPPER_ROUTES.ASSOCIATEDPLANS,
  //   contentHeader: "Associate Plans",
  //   breadCrumbs: [],
  //   childRoutes: [],
  // },
  {
    label: "Map & Transform",
    path: MANAGE_MAPPER_ROUTES.MAP_AND_TRANSFORM,
    contentHeader: "Map & Transform",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Verify Map",
    path: MANAGE_MAPPER_ROUTES.VERIFY_MAP,
    contentHeader: "Verify Map",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Ruleset",
    path: MANAGE_MAPPER_ROUTES.RULESET,
    contentHeader: "Ruleset",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Scheduler",
    path: MANAGE_MAPPER_ROUTES.SCHEDULER,
    contentHeader: "Scheduler",
    breadCrumbs: [],
    childRoutes: [],
  },
  {
    label: "Review & Confirm",
    path: MANAGE_MAPPER_ROUTES.REVIEW_AND_CONFIRM,
    contentHeader: "Review & Confirm",
    breadCrumbs: [],
    childRoutes: [],
  },
];

export const ALL_MANAGE_MAPPER_ROUTES = [
  ...MANAGE_MAPPER_MENU,
  {
    contentHeader: "Mapper",
    path: MANAGE_MAPPER_ROUTES.MAP_AND_TRANSFORM,
    breadCrumbs: [
      // {
      //   label: "Manage Reports",
      //   link: MANAGE_REPORTS_ROUTES.ELIGIBILITY_FILTER,
      // },
    ],
  },
];

export const manageMapperFormNames = {
  BASIC_INFORMATION: "basic_information",
  MAP_AND_TRANSFORM: "map_and_transform",
  AGGREGATE: "load_definition_aggregate",
  SOURCE: "load_definition_source",
  FILTER: "load_definition_filter",
  TARGET: "target",
  ASSOCIATEDPLANS: "associate_plans",
  RULESET: "ruleset",
  SCHEDULER: "scheduler",
  REVIEW_AND_CONFIRM: "review_and_confirm",
  OVERVIEW: "overview",
  FIXED_LENGTH: "fixed_length",
};

export const mapperFormFields = {
  [manageMapperFormNames.BASIC_INFORMATION]: {
    mapName: "name",
    mapType: "mapType",
  },
  [manageMapperFormNames.SOURCE]: {
    fileType: "fileType",
    fileFormat: "format",
    selectDataFrom: "selectDataFrom",
    hasHeader: "hasHeader",
    checkForHeaderCountMismatch: "checkForHeaderCountMismatch",
    contentStartsFrom: "contentStartsFrom",
    uploadSourceFile: "uploadSourceFile",
    sourceUrl: "sourceUrl",
    sourceUserName: "sourceUserName",
    sourcePassword: "sourcePassword",
    delimiter: "delimiter",
    spreadSheetNumber: "spreadSheetNumber",
    spreadSheetName: "spreadSheetName",
    recordLength: "recordLength",
  },
};
export const DataType = {
  1: "string",
  2: "number",
  3: "boolean",
  4: "date",
};

export const EmployeeClassificationGroup = [
  {
    tId: uuid.v4(),
    displayName: "NAME",
    propertyName: "ClassificationName",
    dataType: 1,
    format: "",
    fieldLength: 50,
    fieldOperations: [],
    sortOrder: 1,
    constantValue: "",
    dataSource: 1,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    displayName: "VALUE",
    propertyName: "Code",
    dataType: 1,
    format: "",
    fieldOperations: [],
    sortOrder: 2,
    constantValue: "",
    dataSource: 1,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    displayName: "START DATE",
    propertyName: "EffectiveStartDate",
    dataType: 4,
    format: "MM-DD-YYYY",
    fieldOperations: [],
    sortOrder: 3,
    constantValue: "",
    dataSource: 1,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    displayName: "END DATE",
    propertyName: "EffectiveEndDate",
    dataType: 4,
    format: "MM-DD-YYYY",
    fieldOperations: [],
    sortOrder: 4,
    constantValue: "",
    dataSource: 4,
  },
];

const CompenstionChilds = [
  {
    tId: uuid.v4(),
    isCollection: false,
    displayName: "Name",
    propertyName: "CompensationType",
    dataType: 1,
    format: "",
    fieldLength: 0,
    path: null,
    sortOrder: 1,
    index: null,
    constantValue: "",
    dataSource: 1,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    displayName: "Amount",
    propertyName: "YTDAmount",
    dataType: 2,
    format: "",
    fieldLength: 0,
    path: null,
    sortOrder: 2,
    index: null,
    constantValue: "",
    dataSource: 1,
  },
];
const ContributionChilds = [
  {
    tId: uuid.v4(),
    isCollection: false,
    displayName: "Rk Plan Number",
    propertyName: "RKPlanNumber",
    dataType: 1,
    format: "",
    fieldLength: 0,
    path: null,
    sortOrder: 1,
    index: null,
    constantValue: "",
    dataSource: 1,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    displayName: "Name",
    propertyName: "SourceName",
    dataType: 1,
    format: "",
    fieldLength: 0,
    path: null,
    sortOrder: 2,
    index: null,
    constantValue: "",
    dataSource: 1,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    displayName: "Amount",
    propertyName: "ContributionAmount",
    dataType: 2,
    format: "",
    fieldLength: 0,
    path: null,
    sortOrder: 3,
    index: null,
    constantValue: "",
    dataSource: 1,
  },
];

const PayrollLoanChilds = [
  {
    tId: uuid.v4(),
    isCollection: false,
    displayName: "Rk Plan Number",
    propertyName: "RKPlanNumber",
    dataType: 1,
    format: "",
    fieldLength: 0,
    path: null,
    sortOrder: 1,
    index: null,
    constantValue: "",
    dataSource: 1,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    displayName: "Loan Id",
    propertyName: "LoanNumber",
    dataType: 1,
    format: "",
    fieldLength: 0,
    path: null,
    sortOrder: 2,
    index: null,
    constantValue: "",
    dataSource: 1,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    displayName: "Loan Repayment",
    propertyName: "RepaymentAmount",
    dataType: 2,
    format: "",
    fieldLength: 0,
    path: null,
    sortOrder: 3,
    index: null,
    constantValue: "",
    dataSource: 1,
  },
];

export const CensusAndPayroll = [
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Personal Information",
    displayName: "EMPLOYEE ID",
    propertyName: "EmployeeNumber",
    dataType: 1,
    format: "",
    fieldLength: 15,
    sortOrder: 1,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Personal Information",
    displayName: "SSN",
    propertyName: "UniquePersonalIdentification",
    dataType: 1,
    format: "XXX-XXX-XXX",
    fieldLength: 15,
    sortOrder: 1,
    isRequired: true,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Personal Information",
    displayName: "RK PLAN NUMBER",
    propertyName: "RKPlanNumber",
    dataType: 1,
    format: "",
    fieldLength: 15,
    sortOrder: 1,
    isRequired: true,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Personal Information",
    displayName: "FIRST NAME",
    propertyName: "FirstName",
    dataType: 1,
    format: "",
    fieldLength: 50,
    sortOrder: 1,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Personal Information",
    displayName: "LAST NAME",
    propertyName: "LastName",
    dataType: 1,
    format: "",
    fieldLength: 50,
    sortOrder: 1,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Personal Information",
    displayName: "MIDDLE NAME",
    propertyName: "MiddleName",
    dataType: 1,
    format: "",
    sortOrder: 1,
    fieldLength: 50,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Personal Information",
    displayName: "GENDER",
    propertyName: "Gender",
    dataType: 1,
    format: "",
    sortOrder: 1,
    fieldLength: 15,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Personal Information",
    displayName: "MARITAL STATUS",
    propertyName: "MaritalStatus",
    dataType: 1,
    format: "",
    sortOrder: 1,
    fieldLength: 15,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Personal Information",
    displayName: "BIRTH DATE",
    propertyName: "BirthDate",
    dataType: 4,
    format: "MM-DD-YYYY",
    fieldLength: 0,
    sortOrder: 1,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Contact Information",
    displayName: "ADDRESS 1",
    propertyName: "Address1",
    dataType: 1,
    format: "",
    fieldLength: 150,
    sortOrder: 2,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Contact Information",
    displayName: "ADDRESS 2",
    propertyName: "Address2",
    dataType: 1,
    format: "",
    sortOrder: 2,
    fieldLength: 150,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Contact Information",
    displayName: "CITY",
    propertyName: "City",
    dataType: 1,
    format: "",
    fieldLength: 15,
    sortOrder: 2,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Contact Information",
    displayName: "COUNTRY",
    propertyName: "Country",
    dataType: 1,
    format: "",
    fieldLength: 15,
    sortOrder: 2,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Contact Information",
    displayName: "STATE",
    propertyName: "State",
    dataType: 1,
    format: "",
    fieldLength: 15,
    sortOrder: 2,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Contact Information",
    displayName: "ZIP CODE",
    propertyName: "ZipCode",
    dataType: 1,
    format: "",
    fieldLength: 15,
    sortOrder: 2,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Contact Information",
    displayName: "PHONE NUMBER",
    propertyName: "MobilePhoneNumber",
    dataType: 1,
    format: "",
    fieldLength: 15,
    sortOrder: 2,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Contact Information",
    displayName: "SECONDARY PHONE NUMBER",
    propertyName: "WorkPhoneNumber",
    dataType: 2,
    format: "",
    fieldLength: 15,
    sortOrder: 2,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Contact Information",
    displayName: "EMAIL ADDRESS",
    propertyName: "PrimaryEmailAddress",
    dataType: 1,
    format: "",
    fieldLength: 50,
    sortOrder: 2,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Employment & Age Details",
    displayName: "Hire Date",
    propertyName: "HireDate",
    dataType: 4,
    format: "MM-DD-YYYY",
    fieldLength: 0,
    sortOrder: 3,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Employment & Age Details",
    displayName: "Most Recent Term Date",
    propertyName: "TerminationDate",
    dataType: 4,
    format: "MM-DD-YYYY",
    fieldLength: 0,
    sortOrder: 3,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Employment & Age Details",
    displayName: "Most Recent Rehire Date",
    propertyName: "ReHireDate",
    dataType: 4,
    format: "MM-DD-YYYY",
    fieldLength: 0,
    sortOrder: 3,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Employment & Age Details",
    displayName: "Leave Start Date",
    propertyName: "LeaveStartDate",
    dataType: 4,
    format: "MM-DD-YYYY",
    fieldLength: 0,
    sortOrder: 3,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Employment & Age Details",
    displayName: "Leave End Date",
    propertyName: "LeaveEndDate",
    dataType: 4,
    format: "MM-DD-YYYY",
    fieldLength: 0,
    sortOrder: 3,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Employment & Age Details",
    displayName: "Payroll Frequency",
    propertyName: "PayrollFrequencyName",
    dataType: 1,
    format: "",
    fieldLength: 50,
    sortOrder: 3,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Employment & Age Details",
    displayName: "HCE Indicator",
    propertyName: "HCEIndicator",
    dataType: 1,
    format: "",
    fieldLength: 50,
    sortOrder: 3,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Employment & Age Details",
    displayName: "Employment Status Code",
    propertyName: "EmploymentStatus",
    dataType: 1,
    format: "",
    fieldLength: 15,
    sortOrder: 3,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Employment & Age Details",
    displayName: "Pay Date",
    propertyName: "PayDate",
    dataType: 4,
    format: "MM-DD-YYYY",
    fieldLength: 0,
    sortOrder: 3,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Employment & Age Details",
    displayName: "Officer Indicator",
    propertyName: "OfficerIndicator",
    dataType: 1,
    format: "",
    fieldLength: 50,
    sortOrder: 3,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Hours and Compensation",
    displayName: "Annual Salary",
    propertyName: "AnnualSalary",
    dataType: 2,
    format: "",
    fieldLength: 0,
    sortOrder: 4,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Hours and Compensation",
    displayName: "Deferral %",
    propertyName: "DeferralPercentage",
    dataType: 2,
    format: "",
    fieldLength: 0,
    sortOrder: 4,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Hours and Compensation",
    displayName: "Match %",
    propertyName: "MatchPercentage",
    dataType: 2,
    format: "",
    fieldLength: 0,
    sortOrder: 4,
  },
  {
    tId: uuid.v4(),
    isCollection: false,
    groupName: "Hours and Compensation",
    displayName: "Hours",
    propertyName: "PayPeriodHours",
    dataType: 2,
    format: "",
    fieldLength: 0,
    sortOrder: 4,
  },
  {
    tId: uuid.v4(),
    isCollection: true,
    isCollectionStart: true,
    isCollectionEnd: true,
    childObjectMaps: EmployeeClassificationGroup,
    groupName: "Employee Classification",
    propertyName: "EmployeeClassifications",
    dataType: 2,
    format: "",
    fieldLength: 150,
    sortOrder: 5,
  },
  {
    tId: uuid.v4(),
    isCollection: true,
    isCollectionStart: true,
    isCollectionEnd: true,
    childObjectMaps: CompenstionChilds,
    groupName: "Compensation",
    propertyName: "Compensations",
    dataType: 1,
    format: "",
    fieldLength: 15,
    sortOrder: 6,
  },
  {
    tId: uuid.v4(),
    isCollection: true,
    isCollectionStart: true,
    isCollectionEnd: true,
    childObjectMaps: ContributionChilds,
    groupName: "Contribution",
    propertyName: "Contributions",
    dataType: 1,
    format: "",
    fieldLength: 15,
    sortOrder: 7,
  },
  {
    tId: uuid.v4(),
    isCollection: true,
    isCollectionStart: true,
    isCollectionEnd: true,
    childObjectMaps: PayrollLoanChilds,
    groupName: "Loan",
    propertyName: "PayrollLoans",
    dataType: 1,
    format: "",
    fieldLength: 15,
    sortOrder: 8,
  },
];

// export const TargetFields = [

//   // {
//   //   id: 36,
//   //   isCollection: true,
//   //   groupName: "Contribution",
//   //   displayName: "RKPlanNumber",
//   //   propertyName: "RKPlanNumber",
//   //   dataType: DataType[1],
//   //   format: "",
//   //   fieldLength: 15,
//   // },
//   // {
//   //   id: 37,
//   //   isCollection: true,
//   //   groupName: "Contribution",
//   //   displayName: "Name",
//   //   propertyName: "ContributionName",
//   //   dataType: DataType[1],
//   //   format: "",
//   //   fieldLength: 0,
//   // },
//   // {
//   //   id: 38,
//   //   isCollection: true,
//   //   groupName: "Contribution",
//   //   displayName: "Amount",
//   //   propertyName: "ContributionAmount",
//   //   dataType: DataType[2],
//   //   format: "",
//   //   fieldLength: 0,
//   // },

//   // {
//   //   id: 42,
//   //   isCollection: true,
//   //   groupName: "Loan",
//   //   displayName: "RK Plan Number",
//   //   propertyName: "RKPlanNumber",
//   //   dataType: DataType[1],
//   //   format: "",
//   //   fieldLength: 15,
//   // },
//   // {
//   //   id: 43,
//   //   isCollection: true,
//   //   groupName: "Loan",
//   //   displayName: "Loan Id",
//   //   propertyName: "LoanNumber",
//   //   dataType: DataType[1],
//   //   format: "",
//   //   fieldLength: 0,
//   // },
//   // {
//   //   id: 44,
//   //   isCollection: true,
//   //   groupName: "Loan",
//   //   displayName: "Loan Repayment",
//   //   propertyName: "RepaymentAmount",
//   //   dataType: DataType[2],
//   //   format: "",
//   //   fieldLength: 0,
//   // },
//   // {
//   //   id: 45,
//   //   isCollection: true,
//   //   groupName: "Custom Fields",
//   // },
// ];

// export const MappingInformation = TargetFields.reduce((res, data) => {
//   if (!res[data.groupName]) {
//     res[data.groupName] = [];
//   }
//   res[data.groupName].push(data);
//   return res;
// }, {});

export const stringOptions = [
  {
    value: 0,
    label: "Is Not Null",
  },
  {
    value: 1,
    label: "Is Null",
  },
  {
    value: 2,
    label: "Between",
  },
  {
    value: 3,
    label: "Is equal to",
  },
  {
    value: 4,
    label: "Contains",
  },
  {
    value: 5,
    label: "Starts With",
  },
  {
    value: 6,
    label: "Ends With",
  },
  {
    value: 7,
    label: "In",
  },
  {
    value: 8,
    label: "Length Equal to",
  },
  {
    value: 9,
    label: "Length Greater than",
  },
  {
    value: 10,
    label: "Length Greater than or equal to",
  },
  {
    value: 11,
    label: "Length Lesser than or equal to",
  },
  {
    value: 12,
    label: "Greater than",
  },
  {
    value: 13,
    label: "Lesser than",
  },
  {
    value: 14,
    label: "Greater than or equal to",
  },
  {
    value: 15,
    label: "Lesser than or equal to",
  },
];

export const numericOptions = [
  {
    value: 0,
    label: "Is Not Null",
  },
  {
    value: 1,
    label: "Is Null",
  },
  {
    value: 2,
    label: "Between",
  },
  {
    value: 3,
    label: "Is equal to",
  },
  {
    value: 4,
    label: "Length Equal to",
  },
  {
    value: 5,
    label: "Length Greater than",
  },
  {
    value: 6,
    label: "Length Lesser than",
  },
  {
    value: 7,
    label: "Length Greater than or equal to",
  },
  {
    value: 8,
    label: "Length Lesser than or equal to",
  },
  {
    value: 9,
    label: "Greater than",
  },
  {
    value: 10,
    label: "Lesser than",
  },
  {
    value: 11,
    label: "Greater than or equal to",
  },
  {
    value: 12,
    label: "Lesser than or equal to",
  },
];

export const dateOptions = [
  {
    value: 0,
    label: "Is Not Null",
  },
  {
    value: 1,
    label: "Is Null",
  },
  {
    value: 2,
    label: "Between",
  },
  {
    value: 3,
    label: "Is equal to",
  },
  {
    value: 4,
    label: "Greater than",
  },
  {
    value: 5,
    label: "Lesser than",
  },
  {
    value: 6,
    label: "Greater than or equal to",
  },
  {
    value: 7,
    label: "Lesser than or equal to",
  },
];
